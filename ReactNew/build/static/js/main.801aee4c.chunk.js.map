{"version":3,"sources":["Paginate/App.js","index.js"],"names":["Post","data","id","title","body","className","Pagination","pageLimit","dataLimit","currentPage","setCurrentPage","useState","Math","round","length","pages","changePage","event","pageNumber","Number","target","textContent","onClick","page","start","floor","Array","fill","map","_","idx","getPaginationGroup","item","index","Pages","useEffect","window","scrollTo","behavior","top","startIndex","endIndex","slice","getPaginatedData","d","App","posts","setPosts","fetch","then","response","ok","json","Error","catch","error","console","log","ReactDOM","render","document","getElementById"],"mappings":"oKAMMA,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACNC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KACnB,OACE,sBAAKC,UAAU,OAAf,UACE,gCAAQH,IACR,6BAAKC,IACL,4BAAIC,QAMJE,EAAa,SAAC,GAAiE,IAA/DL,EAA8D,EAA9DA,KAAMM,EAAwD,EAAxDA,UAAWC,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAC7D,EAAgBC,mBAASC,KAAKC,MAAMZ,EAAKa,OAASN,IAA3CO,EAAP,oBAWMC,EAAa,SAACC,GAClB,IAAMC,EAAaC,OAAOF,EAAMG,OAAOC,aACvCX,EAAeQ,IAEjB,OACE,sBAAKb,UAAU,aAAf,UACE,wBACEiB,QAVmB,WACvBZ,GAAe,SAACa,GAAD,OAAUA,EAAO,MAU5BlB,UAAS,eAA0B,IAAhBI,EAAoB,WAAa,IAFtD,kBAhBuB,WACzB,IAAIe,EAAQZ,KAAKa,OAAOhB,EAAc,GAAKF,GAAaA,EACxD,OAAO,IAAImB,MAAMnB,GAAWoB,OAAOC,KAAI,SAACC,EAAGC,GAAJ,OAAYN,EAAQM,EAAM,KAoB9DC,GAAqBH,KAAI,SAACI,EAAMC,GAAP,OACxB,wBAEEX,QAASN,EACTX,UAAS,yBAAoBI,IAAgBuB,EAAO,SAAW,MAHjE,SAKE,+BAAOA,KAJFC,MAOT,wBACEX,QA5Be,WACnBZ,GAAe,SAACa,GAAD,OAAUA,EAAO,MA4B5BlB,UAAS,eAAUI,IAAgBM,EAAQ,WAAa,IAF1D,sBAWAmB,EAAQ,SAAC,GAAiD,IAA/CjC,EAA8C,EAA9CA,KAAMD,EAAwC,EAAxCA,KAAMG,EAAkC,EAAlCA,MAAOI,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UAC7C,EAAsCG,mBAAS,GAA/C,mBAAOF,EAAP,KAAoBC,EAApB,KASA,OAHAyB,qBAAU,WACRC,OAAOC,SAAS,CAAEC,SAAU,SAAUC,IAAK,UAC1C,CAAC9B,IAEF,gCACE,6BAAKN,IACL,cAAC,EAAD,CACEF,KAAMA,EACNM,UAAWA,EACXC,UAAWA,EACXC,YAAaA,EACbC,eAAgBA,IAElB,qBAAKL,UAAU,gBAAf,SAlBqB,WACvB,IAAMmC,EAAa/B,EAAcD,EAAYA,EACvCiC,EAAWD,EAAahC,EAC9B,OAAOP,EAAKyC,MAAMF,EAAYC,GAgBzBE,GAAmBf,KAAI,SAACgB,GAAD,OACtB,cAAC5C,EAAD,CAAiBC,KAAM2C,GAAZA,EAAE1C,SAGjB,cAAC,EAAD,CACED,KAAMA,EACNM,UAAWA,EACXC,UAAWA,EACXC,YAAaA,EACbC,eAAgBA,QAyCTmC,EAlCH,WACV,MAA0BlC,mBAAS,IAAnC,mBAAOmC,EAAP,KAAcC,EAAd,KAaA,OAHAZ,qBAAU,WARRa,MAnGQ,8CAoGLC,MAAK,SAACC,GACL,GAAIA,EAASC,GAAI,OAAOD,EAASE,OACjC,MAAM,IAAIC,MAAM,kDAEjBJ,MAAK,SAACH,GAAD,OAAWC,EAASD,MACzBQ,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAI/B,IAED,gCACE,qDACCT,EAAMhC,OAAS,EACd,mCACE,cAAC,EAAD,CACEb,KAAM6C,EACN9C,KAAMA,EACNG,MAAM,gBACNI,UAAW,EACXC,UAAW,MAIf,yDCvHRkD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.801aee4c.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport './App.css'\r\n\r\nconst url = 'https://jsonplaceholder.typicode.com/posts';\r\n\r\n\r\nconst Post = ({ data }) => {\r\n  const { id, title, body } = data;\r\n  return (\r\n    <div className=\"post\">\r\n      <small>{id}</small>\r\n      <h1>{title}</h1>\r\n      <p>{body}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst Pagination = ({ data, pageLimit, dataLimit, currentPage, setCurrentPage }) => {\r\n  const [pages] = useState(Math.round(data.length / dataLimit));\r\n  const getPaginationGroup = () => {\r\n    let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\r\n    return new Array(pageLimit).fill().map((_, idx) => start + idx + 1);\r\n  };\r\n  const goToNextPage = () => {\r\n    setCurrentPage((page) => page + 1);\r\n  }\r\n  const goToPreviousPage = () => {\r\n    setCurrentPage((page) => page - 1);\r\n  }\r\n  const changePage = (event) => {\r\n    const pageNumber = Number(event.target.textContent);\r\n    setCurrentPage(pageNumber);\r\n  }\r\n  return (\r\n    <div className=\"pagination\">\r\n      <button\r\n        onClick={goToPreviousPage}\r\n        className={`prev ${currentPage === 1 ? 'disabled' : ''}`}\r\n      >\r\n        prev\r\n      </button>\r\n      {getPaginationGroup().map((item, index) => (\r\n        <button\r\n          key={index}\r\n          onClick={changePage}\r\n          className={`paginationItem ${currentPage === item ? 'active' : null}`}\r\n        >\r\n          <span>{item}</span>\r\n        </button>\r\n      ))}\r\n      <button\r\n        onClick={goToNextPage}\r\n        className={`next ${currentPage === pages ? 'disabled' : ''}`}\r\n      >\r\n        next\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst Pages = ({ data, Post, title, pageLimit, dataLimit }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const getPaginatedData = () => {\r\n    const startIndex = currentPage * dataLimit - dataLimit;\r\n    const endIndex = startIndex + dataLimit;\r\n    return data.slice(startIndex, endIndex);\r\n  };\r\n  useEffect(() => {\r\n    window.scrollTo({ behavior: 'smooth', top: '0px' });\r\n  }, [currentPage]);\r\n  return (\r\n    <div>\r\n      <h1>{title}</h1>\r\n      <Pagination\r\n        data={data}\r\n        pageLimit={pageLimit}\r\n        dataLimit={dataLimit}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      <div className=\"dataContainer\">\r\n        {getPaginatedData().map((d) => (\r\n          <Post key={d.id} data={d} />\r\n        ))}\r\n      </div>\r\n      <Pagination\r\n        data={data}\r\n        pageLimit={pageLimit}\r\n        dataLimit={dataLimit}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst App = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const getData = () => {\r\n    fetch(url)\r\n      .then((response) => {\r\n        if (response.ok) return response.json();\r\n        throw new Error('something went wrong while requesting posts');\r\n      })\r\n      .then((posts) => setPosts(posts))\r\n      .catch((error) => console.log(error));\r\n  }\r\n  useEffect(() => {\r\n    getData()\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <h1>My Pagination Pages</h1>\r\n      {posts.length > 0 ? (\r\n        <>\r\n          <Pages\r\n            data={posts}\r\n            Post={Post}\r\n            title=\"List of Posts\"\r\n            pageLimit={3}\r\n            dataLimit={8}\r\n          />\r\n        </>\r\n      ) : (\r\n        <h1>No Posts to display</h1>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import App from './Router/App';\n// import App from './Graphql/App';\n// import App from './useRef/App';\nimport App from './Paginate/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}